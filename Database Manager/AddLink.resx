<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAACLAAAAzwAAAP4AAAD/AAAA4AAAALQAAACdAAAAEwAAAAAAAAABAAAAAAAAACcAAABvAAAAjwAA
        AP4AAAD/AAAA1AAAAG4AAAB3AAAAdgAAAHYAAAB2AAAAdgAAAHYAAAB2AAAAdgAAAHUAAAB+AAAAfwAA
        AH8AAAB7AAAAfwAAAHIAAACYAAAA/wAAAP8AAADHAAAAcQAAAFIAAAAAAAAAAAAAAAAAAAAAAAAA6AAA
        AP8AAAD+AAAA+wAAAPsAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD7AAAA+wAAAP0AAAD8AAAA/wAAAFcAAAAAAAAAAwAA
        AAAAAAD+AAAA+wAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPYAAAD/AAAAcQAA
        AAAAAAAEAAAAAAAAAPwAAAD/AAAA4QAAAFoAAABcAAAAXAAAAFwAAABcAAAAXQAAAF0AAABdAAAAXQAA
        AF4AAABeAAAAXgAAAF4AAABeAAAAXgAAAF4AAABeAAAAXgAAAF4AAABdAAAAXwAAAFEAAACdAAAA/wAA
        AP8AAABwAAAAAAAAAAQAAAAAAAAA/QAAAP8AAADRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AGYAAAD/AAAA/wAAAHEAAAAAAAAABAAAAAAAAAD8AAAA/wAAANEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAZgAAAP8AAAD/AAAAcQAAAAAAAAAEAAAAAAAAAPwAAAD/AAAA9AAAAMgAAADJAAAAyQAA
        AMgAAADJAAAAyQAAAMkAAADJAAAAyQAAAMkAAADJAAAAyQAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAA
        AMgAAADIAAAAyQAAAMQAAADeAAAA/gAAAP8AAABwAAAAAAAAAAQAAAAAAAAA/QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAG8AAAAAAAAABAAAAAAAAACiAAAA6wAA
        AOoAAAD8AAAA/gAAAPUAAADjAAAA5QAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAA
        AOQAAADkAAAA5AAAAOUAAADjAAAA6gAAAP0AAAD+AAAA8wAAAOcAAADaAAAAKwAAAAAAAAACAAAAAAAA
        ABMAAABPAAAAeQAAAP4AAAD/AAAAywAAAFEAAABcAAAAWgAAAFoAAABaAAAAWgAAAFoAAABaAAAAWgAA
        AFoAAABaAAAAWgAAAFoAAABaAAAAXAAAAFEAAACEAAAA/wAAAP8AAAC8AAAAVAAAADUAAAAAAAAAAQAA
        AAAAAAAAAAAAzAAAAP8AAAD9AAAA+wAAAPsAAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD7AAAA+wAAAPwAAAD/AAAA/wAA
        AEAAAAAAAAAAAwAAAAAAAAD/AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APoAAAD/AAAAcQAAAAAAAAAEAAAAAAAAAPwAAAD/AAAA7QAAAJgAAACZAAAAmgAAAJoAAACaAAAAmgAA
        AJsAAACbAAAAmwAAAJsAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJsAAACbAAAAnAAA
        AJMAAADCAAAA/wAAAP8AAABwAAAAAAAAAAQAAAAAAAAA/AAAAP8AAADRAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAGYAAAD/AAAA/wAAAHEAAAAAAAAABAAAAAAAAAD9AAAA/wAAANEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAZgAAAP8AAAD/AAAAcQAAAAAAAAAEAAAAAAAAAPwAAAD/AAAA6gAA
        AIwAAACNAAAAjQAAAI0AAACNAAAAjQAAAI0AAACNAAAAjQAAAI0AAACNAAAAjQAAAI0AAACNAAAAjQAA
        AI0AAACNAAAAjQAAAI0AAACNAAAAjwAAAIUAAAC7AAAA/wAAAP8AAABwAAAAAAAAAAQAAAAAAAAA/wAA
        AP4AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD5AAAA/wAAAHEAAAAAAAAABAAA
        AAAAAADPAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD/AAAAQgAA
        AAAAAAADAAAAAAAAABcAAABPAAAAUQAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAA
        AFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABPAAAAVAAA
        ADQAAAAAAAAAAAAAAAAAAAAA/0CBEACAgIAAgIBAXIiMRAAAhAQAQIREAACAQABAgEASQYCQAAiIBQAA
        CAQAAAgFAABIBQAAAAkAAAAFAAAABQAAAAUT//6FE//+hQAAAAUAAAAFAAAABQAAAAkAAAAFAAAABQAA
        AAUT//6FE//+hQAAAAUAAAAFAAAABQAAAAk=
</value>
  </data>
</root>